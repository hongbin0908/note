* ref
a short example:
http://blog.csdn.net/sunny2038/article/details/9002531
* type
名称 	描述
bool 	用一个Bit存储的布尔类型（True或False）
inti 	由所在平台决定其大小的整数（一般为int32或int64）
int8 	一个字节大小，-128 至 127
int16 	整数，-32768 至 32767
int32 	整数，-2 ** 31 至 2 ** 32 -1
int64 	整数，-2 ** 63 至 2 ** 63 - 1
uint8 	无符号整数，0 至 255
uint16 	无符号整数，0 至 65535
uint32 	无符号整数，0 至 2 ** 32 - 1
uint64 	无符号整数，0 至 2 ** 64 - 1
float16 	半精度浮点数：16位，正负号1位，指数5位，精度10位
float32 	单精度浮点数：32位，正负号1位，指数8位，精度23位
float64或float 	双精度浮点数：64位，正负号1位，指数11位，精度52位
complex64 	复数，分别用两个32位浮点数表示实部和虚部
complex128或complex 	复数，分别用两个64位浮点数表示实部和虚部
* 矩阵的乘法
mat ** 2
* 矩阵的维度
横轴是第1维度, 纵轴是第0维度
mat.sum(axis=1) 表示将横轴数累加起来, 纵轴不变
mat.shape 表示获取维度(纵维度, 横维度)
排序返回序列
mat.argsort()
* 初始化
http://wiki.scipy.org/Tentative_NumPy_Tutorial
>>> a = arange(15).reshape(3, 5)
>>> a
array([[ 0,  1,  2,  3,  4],
       [ 5,  6,  7,  8,  9],
       [10, 11, 12, 13, 14]])
>>> a.shape
(3, 5)
>>> a.ndim
2
>>> a.dtype.name
'int32'
>>> a.itemsize
4
>>> a.size
15
>>> type(a)
numpy.ndarray
>>> b = array([6, 7, 8])
>>> b
array([6, 7, 8])
>>> type(b)
numpy.ndarray

源文档 <http://wiki.scipy.org/Tentative_NumPy_Tutorial> 


* 遍历
Iterating over multidimensional arrays is done with respect to the first axis:
>>> for row in b:
...         print row
...
[0 1 2 3]
[10 11 12 13]
[20 21 22 23]
[30 31 32 33]
[40 41 42 43]
However, if one wants to perform an operation on each element in the array, one can use the flat attribute which is an iterator over all the elements of the array:
>>> for element in b.flat:
...         print element,
...
0 1 2 3 10 11 12 13 20 21 22 23 30 31 32 33 40 41 42 43

源文档 <http://wiki.scipy.org/Tentative_NumPy_Tutorial#head-864862d3f2bb4c32f04260fac61eb4ef34788c4c> 



